<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.10">
  <actions/>
  <description>This job has been created automatically from HCL ADC framework using Spring-Boot template with template name as jenkins_template_springboot</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.SCMTrigger>
          <spec>H/2 * * * *</spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>

  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.30">
    <script>node(&apos;template.nodename&apos;) {

        stage(&apos;Code Checkout&apos;) {
               echo &apos;Checking out code...&apos;
               checkout([$class: &apos;GitSCM&apos;, branches: [[name: &apos;*/template.branchname&apos;]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &apos;template.gitcredentialsId&apos;, url: &apos;template.git.url&apos;]]])
        }

        stage(&apos;Code Build&apos;) {
                echo &apos;Building code...&apos;
                sh returnStdout: true, script: &apos;&apos;&apos;cd template.servicename
                mvn clean install &apos;&apos;&apos;
        }

        stage(&apos;Code Tests&apos;) {
                echo &apos;Running test cases for template.servicename ..&apos;
 		            sh returnStdout: true, script: &apos;&apos;&apos;cd template.servicename
		            mvn test &apos;&apos;&apos;
        }

        stage(&apos;Code Analysis&apos;) {
                echo &apos;Analysing code for template.servicename...&apos;
                //sh returnStdout: true, script: &apos;&apos;&apos;cd template.servicename
                //mvn clean test -B -V -U -e sonar:sonar -Dsonar.host.url=\&apos;template.sonarurl\&apos;&apos;&apos;&apos;
        }


        stage(&apos;Nexus Artifacts upload&apos;) {
                echo &apos;Uploading template.servicename artifacts to nexus..&apos;
				        //nexusArtifactUploader artifacts: [[artifactId: &apos;template.servicename&apos;, classifier: &apos;&apos;, file: &apos;template.servicename/target/template.servicename-0.0.1-SNAPSHOT.war&apos;, type: &apos;war&apos;]], credentialsId: &apos;template.nexuscred&apos;, groupId: &apos;com.hcl&apos;, nexusUrl: &apos;template.nexusurl&apos;, nexusVersion: &apos;nexus2&apos;, protocol: &apos;http&apos;, repository: &apos;Snapshots&apos;, version: &apos;0.0.1&apos;
       }

        stage(&apos;Deploy to PCF&apos;) {
                echo &apos;Deploying template.servicename to PCF..&apos;
                sh returnStdout: true, script: &apos;&apos;&apos; cd template.servicename
				cf login -a template.pcfUrl -u template.pcfUsername -p template.pcfPassword -o template.pcfOrg -s template.pcfSpace
                cf push -f ../pcf-manifest/manifest.yml
				cf logout&apos;&apos;&apos;
        }		
		
}
 </script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>
