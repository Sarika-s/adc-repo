<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.15">
  <actions/>
  <description>This job has been created automatically from HCL ADC framework using ALM MicroServices template with template name as jenkins_template_alm_ms</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.2">
      <gitLabConnection></gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.6"/>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.SCMTrigger>
          <spec>H 5 * * *</spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.42">
    <script>node(&apos;template.nodename&apos;) {
        stage(&apos;Checkout&apos;) {
            echo &apos;Checking out code...&apos;
            checkout([$class: &apos;GitSCM&apos;, branches: [[name: &apos;*/template.branchname&apos;]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &apos;template.gitcredentialsId&apos;, url: &apos;template.git.url&apos;]]])
        }

        stage(&apos;Build&apos;) {
            echo &apos;Building ..&apos;
                    sh returnStdout: true, script: &apos;&apos;&apos;cd template.servicename
                    mvn clean package -DskipTests&apos;&apos;&apos;
        }

        stage(&apos;Running Tests&apos;) {
            echo &apos;Building ..&apos;
                    sh returnStdout: true, script: &apos;&apos;&apos;cd template.servicename
                    mvn test -Dspring.profiles.active=template.profile&apos;&apos;&apos;
        }

       stage(&apos;Static Analysis&apos;) {
            echo &apos;Analysing code...&apos;
            sh returnStdout: true, script: &apos;&apos;&apos;cd template.servicename
            mvn test -Dspring.profiles.active=template.profile -B -V -U -e sonar:sonar -Dsonar.host.url=\&apos;template.sonarurl\&apos;&apos;&apos;&apos;
        }

        stage(&apos;Nexus Artifacts upload&apos;) {
                        echo &apos;Uploading artifacts to nexus..&apos;
            //sh returnStdout: true, script: &apos;&apos;&apos;cd template.servicename
                    //mvn clean install -DskipTests deploy -s settings.xml&apos;&apos;&apos;
        }

        stage(&apos;Stopping Service&apos;) {
            echo &apos;Stopping the service&apos;
            sh returnStdout: true, script: &apos;&apos;&apos;
            chmod 755 ./template.servicename/stopService.sh
            ./template.servicename/stopService.sh &amp;&apos;&apos;&apos;
            echo &apos;Service is stopped.&apos;
        }

        stage(&apos;Deploy Service&apos;) {
            echo &apos;Running template.servicename Service..&apos;
            echo &apos;About to sleep&apos;
            sleep 30
            echo &apos;Done sleeping.. now lets work&apos;

            sh &apos;&apos;&apos;JENKINS_NODE_COOKIE=DoNotKillMe
            cd template.servicename/target
			cp template.servicename-*.jar template.servicename.jar
            nohup java &quot;-Xmx256m&quot; -jar &quot;-Dspring.profiles.active=template.profile&quot; template.servicename.jar &gt; /tmp/template.servicename.log &amp;&apos;&apos;&apos;
        }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>